{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"./../auth.service\";\nimport * as i4 from \"ngx-spinner\";\nexport let VerifyComponent = /*#__PURE__*/(() => {\n  class VerifyComponent {\n    constructor(_ActivatedRoute, toastr, _AuthService, _Router, spinner) {\n      this._ActivatedRoute = _ActivatedRoute;\n      this.toastr = toastr;\n      this._AuthService = _AuthService;\n      this._Router = _Router;\n      this.spinner = spinner;\n      this.token = '';\n      this.term = '';\n    }\n\n    ngOnInit() {\n      this.token = this._ActivatedRoute.snapshot.params['token'];\n      this.term = this._ActivatedRoute.snapshot.params['term'];\n      this.verify(this.term, this.token);\n    }\n\n    verify(term, token) {\n      this.spinner.show();\n\n      this._AuthService.verify(term, token).subscribe({\n        next: response => {\n          this.toastr.success(response.message, \"\", {\n            positionClass: 'toast-bottom-right',\n            timeOut: 5000\n          });\n\n          if (response.message == 'Email verified successfully') {\n            this._Router.navigate([\"/login\"]);\n          } else if (response.message == 'Password reseted successfully') {\n            localStorage.setItem(\"changeToken\", token);\n\n            this._Router.navigate([\"/changePassword\"]);\n          } else {\n            this._Router.navigate([\"/login\"]);\n          }\n\n          this.spinner.hide();\n        },\n        error: error => {\n          this.spinner.hide();\n\n          this._Router.navigate([\"/login\"]);\n\n          this.toastr.error(error.error.message, \"\", {\n            positionClass: 'toast-bottom-right',\n            timeOut: 5000\n          });\n        }\n      });\n    }\n\n  }\n\n  VerifyComponent.ɵfac = function VerifyComponent_Factory(t) {\n    return new (t || VerifyComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.ToastrService), i0.ɵɵdirectiveInject(i3.AuthService), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i4.NgxSpinnerService));\n  };\n\n  VerifyComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: VerifyComponent,\n    selectors: [[\"app-verify\"]],\n    decls: 1,\n    vars: 0,\n    consts: [[\"color\", \"#5ECE7B\", \"type\", \"ball-scale-multiple\"]],\n    template: function VerifyComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"ngx-spinner\", 0);\n      }\n    },\n    directives: [i4.NgxSpinnerComponent],\n    styles: [\"\"]\n  });\n  return VerifyComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}