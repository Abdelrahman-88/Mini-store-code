{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-toastr\";\nimport * as i2 from \"./../auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../dark-mode.service\";\nimport * as i5 from \"ngx-spinner\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/forms\";\n\nfunction UpdateProfileComponent_div_12_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"Name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UpdateProfileComponent_div_12_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"Letters only available\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UpdateProfileComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtemplate(1, UpdateProfileComponent_div_12_p_1_Template, 2, 0, \"p\", 18);\n    i0.ɵɵtemplate(2, UpdateProfileComponent_div_12_p_2_Template, 2, 0, \"p\", 18);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r0.updateForm.get(\"name\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r0.updateForm.get(\"name\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"pattern\"]);\n  }\n}\n\nfunction UpdateProfileComponent_div_19_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UpdateProfileComponent_div_19_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"Email should be such as example@domain.com \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UpdateProfileComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtemplate(1, UpdateProfileComponent_div_19_p_1_Template, 2, 0, \"p\", 18);\n    i0.ɵɵtemplate(2, UpdateProfileComponent_div_19_p_2_Template, 2, 0, \"p\", 18);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r1.updateForm.get(\"email\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r1.updateForm.get(\"email\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"email\"]);\n  }\n}\n\nfunction UpdateProfileComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17)(1, \"p\");\n    i0.ɵɵtext(2, \" you must enter only one imge and type must be png or jpg or jpeg and size of file must be less than 1m\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nconst _c0 = function (a0, a1) {\n  return [a0, a1];\n};\n\nexport let UpdateProfileComponent = /*#__PURE__*/(() => {\n  class UpdateProfileComponent {\n    constructor(toastr, _AuthService, _Router, _DarkModeService, spinner) {\n      this.toastr = toastr;\n      this._AuthService = _AuthService;\n      this._Router = _Router;\n      this._DarkModeService = _DarkModeService;\n      this.spinner = spinner;\n      this.show = false;\n      this.touched = false;\n      this.darkMode = false;\n      this.updateForm = new FormGroup({\n        \"name\": new FormControl(null, [Validators.required, Validators.pattern(/^[a-z A-Z]+$/)]),\n        \"email\": new FormControl(null, [Validators.email, Validators.required])\n      });\n      this.formData = new FormData();\n    }\n\n    ngOnInit() {\n      this._AuthService.userData.subscribe(res => {\n        this.user = res;\n      });\n\n      this._DarkModeService.darkMode.subscribe(res => {\n        this.darkMode = res;\n      });\n\n      this.setValue();\n    }\n\n    setValue() {\n      this.updateForm.controls['name'].setValue(this.user.name);\n      this.updateForm.controls['email'].setValue(this.user.email);\n    }\n\n    onFileChange(event) {\n      this.touched = true;\n      this.image = event.target.files[0];\n\n      if (event.target.files.length == 1 && this.image.type.match(/^(image\\/png|image\\/jpg|image\\/jpeg){1}$/) && this.image.size <= 1000 * 1000) {\n        this.formData.append('profilePic', this.image, this.image.name);\n        this.show = false;\n      } else if (!event.target.files.length) {\n        this.show = false;\n        this.touched = false;\n        this.formData.delete('profilePic');\n      } else {\n        this.show = true;\n        this.formData.delete('profilePic');\n      }\n    }\n\n    setData(updateForm) {\n      if (updateForm.valid && !this.show) {\n        this.formData.set('email', updateForm.controls['email'].value);\n        this.formData.set('name', updateForm.controls['name'].value);\n        this.updateProfile();\n      } else {\n        this.toastr.error('Invalid inputs', \"\", {\n          positionClass: 'toast-bottom-right',\n          timeOut: 5000\n        });\n      }\n    }\n\n    updateProfile() {\n      this.spinner.show();\n\n      this._AuthService.updateProfile(this.formData).subscribe({\n        next: response => {\n          this.spinner.hide();\n\n          if (response.message == 'Profile updated successfully') {\n            localStorage.setItem(\"userToken\", response.token);\n\n            this._AuthService.saveUserData();\n\n            this._Router.navigate([\"/profile\"]);\n\n            this.toastr.success(response.message, \"\", {\n              positionClass: 'toast-bottom-right',\n              timeOut: 5000\n            });\n          } else if (response.message == 'Profile updated successfully please verify your email') {\n            localStorage.removeItem(\"userToken\");\n\n            this._AuthService.userData.next(null);\n\n            this._Router.navigate([\"/login\"]);\n\n            this.toastr.success(response.message, \"\", {\n              positionClass: 'toast-bottom-right',\n              timeOut: 5000\n            });\n          } else if (response.message == 'Profile updated successfully but faild to send verification email please try login after some time') {\n            localStorage.removeItem(\"userToken\");\n\n            this._AuthService.userData.next(null);\n\n            this._Router.navigate([\"/login\"]);\n\n            this.toastr.success(response.message, \"\", {\n              positionClass: 'toast-bottom-right',\n              timeOut: 5000\n            });\n          } else {\n            this.toastr.error(response.message, \"\", {\n              positionClass: 'toast-bottom-right',\n              timeOut: 5000\n            });\n          }\n        },\n        error: error => {\n          this.spinner.hide();\n\n          if (error.error.message == 'Profile updated successfully but faild to send verification email please try login after some time') {\n            localStorage.removeItem(\"userToken\");\n\n            this._AuthService.userData.next(null);\n\n            this._Router.navigate([\"/login\"]);\n          }\n\n          this.toastr.error(error.error.message, \"\", {\n            positionClass: 'toast-bottom-right',\n            timeOut: 5000\n          });\n        }\n      });\n    }\n\n  }\n\n  UpdateProfileComponent.ɵfac = function UpdateProfileComponent_Factory(t) {\n    return new (t || UpdateProfileComponent)(i0.ɵɵdirectiveInject(i1.ToastrService), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.DarkModeService), i0.ɵɵdirectiveInject(i5.NgxSpinnerService));\n  };\n\n  UpdateProfileComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UpdateProfileComponent,\n    selectors: [[\"app-update-profile\"]],\n    decls: 31,\n    vars: 29,\n    consts: [[\"color\", \"#5ECE7B\", \"type\", \"ball-scale-multiple\"], [1, \"py-5\", \"mt-5\", 3, \"ngClass\"], [1, \"container\"], [1, \"my-4\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-floating\", \"mb-3\"], [\"formControlName\", \"name\", \"type\", \"text\", \"id\", \"name\", \"placeholder\", \"Name\", 1, \"form-control\", \"bg-transparent\", 3, \"ngClass\"], [\"for\", \"name\"], [1, \"text-danger\"], [\"class\", \"text-danger mt-2\", 4, \"ngIf\"], [\"formControlName\", \"email\", \"type\", \"email\", \"id\", \"email\", \"placeholder\", \"name@example.com\", 1, \"form-control\", \"bg-transparent\", 3, \"ngClass\"], [\"for\", \"email\"], [1, \"mb-3\", \"upload\"], [\"accept\", \"image/png,image/jpg,image/jpeg\", \"type\", \"file\", \"name\", \"uploadfile\", \"id\", \"profile\", 1, \"d-none\", 3, \"change\"], [\"for\", \"profile\", 1, \"d-block\", \"form-control\", \"py-3\", 3, \"ngClass\"], [\"type\", \"submit\", 1, \"btn\", \"border-0\", 3, \"ngClass\"], [\"routerLink\", \"/profile\", 1, \"btn\", \"border-0\", \"ms-2\", \"cancel\"], [1, \"text-danger\", \"mt-2\"], [4, \"ngIf\"]],\n    template: function UpdateProfileComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"ngx-spinner\", 0);\n        i0.ɵɵelementStart(1, \"section\", 1)(2, \"div\", 2)(3, \"h1\", 3);\n        i0.ɵɵtext(4, \"Update profile\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"form\", 4);\n        i0.ɵɵlistener(\"ngSubmit\", function UpdateProfileComponent_Template_form_ngSubmit_5_listener() {\n          return ctx.setData(ctx.updateForm);\n        });\n        i0.ɵɵelementStart(6, \"div\", 5);\n        i0.ɵɵelement(7, \"input\", 6);\n        i0.ɵɵelementStart(8, \"label\", 7);\n        i0.ɵɵtext(9, \"Name \");\n        i0.ɵɵelementStart(10, \"span\", 8);\n        i0.ɵɵtext(11, \"*\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(12, UpdateProfileComponent_div_12_Template, 3, 2, \"div\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 5);\n        i0.ɵɵelement(14, \"input\", 10);\n        i0.ɵɵelementStart(15, \"label\", 11);\n        i0.ɵɵtext(16, \"Email \");\n        i0.ɵɵelementStart(17, \"span\", 8);\n        i0.ɵɵtext(18, \"*\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(19, UpdateProfileComponent_div_19_Template, 3, 2, \"div\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 12)(21, \"input\", 13);\n        i0.ɵɵlistener(\"change\", function UpdateProfileComponent_Template_input_change_21_listener($event) {\n          return ctx.onFileChange($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"label\", 14);\n        i0.ɵɵtext(23);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(24, UpdateProfileComponent_div_24_Template, 3, 0, \"div\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"button\", 15)(26, \"span\");\n        i0.ɵɵtext(27, \"Update\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(28, \"a\", 16)(29, \"span\");\n        i0.ɵɵtext(30, \"Cancel\");\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        let tmp_3_0;\n        let tmp_4_0;\n        let tmp_6_0;\n        let tmp_7_0;\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"ngClass\", ctx.darkMode ? \"dark-mode-back dark-mode-color\" : \"\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.updateForm);\n        i0.ɵɵadvance(2);\n        i0.ɵɵclassProp(\"dark-mode-color\", ctx.darkMode);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(20, _c0, ((tmp_3_0 = ctx.updateForm.get(\"name\")) == null ? null : tmp_3_0.errors) != null && ((tmp_3_0 = ctx.updateForm.get(\"name\")) == null ? null : tmp_3_0.touched) ? \"is-invalid\" : \"\", ((tmp_3_0 = ctx.updateForm.get(\"name\")) == null ? null : tmp_3_0.errors) == null && ((tmp_3_0 = ctx.updateForm.get(\"name\")) == null ? null : tmp_3_0.touched) ? \"is-valid\" : \"\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.updateForm.get(\"name\")) == null ? null : tmp_4_0.errors) != null && ((tmp_4_0 = ctx.updateForm.get(\"name\")) == null ? null : tmp_4_0.touched));\n        i0.ɵɵadvance(2);\n        i0.ɵɵclassProp(\"dark-mode-color\", ctx.darkMode);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(23, _c0, ((tmp_6_0 = ctx.updateForm.get(\"email\")) == null ? null : tmp_6_0.errors) != null && ((tmp_6_0 = ctx.updateForm.get(\"email\")) == null ? null : tmp_6_0.touched) ? \"is-invalid\" : \"\", ((tmp_6_0 = ctx.updateForm.get(\"email\")) == null ? null : tmp_6_0.errors) == null && ((tmp_6_0 = ctx.updateForm.get(\"email\")) == null ? null : tmp_6_0.touched) ? \"is-valid\" : \"\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_7_0 = ctx.updateForm.get(\"email\")) == null ? null : tmp_7_0.errors) != null && ((tmp_7_0 = ctx.updateForm.get(\"email\")) == null ? null : tmp_7_0.touched));\n        i0.ɵɵadvance(2);\n        i0.ɵɵclassProp(\"dark-mode-color\", ctx.darkMode);\n        i0.ɵɵadvance(1);\n        i0.ɵɵclassProp(\"dark-mode-back\", ctx.darkMode)(\"dark-mode-color\", ctx.darkMode);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(26, _c0, ctx.show && ctx.touched ? \"is-invalid upload-bord\" : \"\", !ctx.show && ctx.touched ? \"is-valid\" : \"\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate((ctx.image == null ? null : ctx.image.name) ? ctx.image == null ? null : ctx.image.name : \"Upload profile picture\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.show);\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"ngClass\", ctx.darkMode ? \"btn-dark dark-mode-color-dark\" : \"\");\n      }\n    },\n    directives: [i5.NgxSpinnerComponent, i6.NgClass, i7.ɵNgNoValidate, i7.NgControlStatusGroup, i7.FormGroupDirective, i7.DefaultValueAccessor, i7.NgControlStatus, i7.FormControlName, i6.NgIf, i3.RouterLinkWithHref],\n    styles: [\".dark-mode-back[_ngcontent-%COMP%]{background-color:#202124!important}.dark-mode-color[_ngcontent-%COMP%]{color:#fff!important}.btn-dark[_ngcontent-%COMP%]:after{background-color:#fff!important}.dark-mode-color-dark[_ngcontent-%COMP%]{color:#202124!important}.back-dark-mode[_ngcontent-%COMP%]:hover{background-color:#6e6e6e1a!important}.dark-active[_ngcontent-%COMP%]{background-color:#5ece7b!important;color:#202124!important;border-color:#fff!important}.dark-hover.page-link[_ngcontent-%COMP%]:hover{color:#202124!important}section[_ngcontent-%COMP%]{min-height:100vh}h1[_ngcontent-%COMP%]{color:#5ece7b}.btn[_ngcontent-%COMP%]{color:#fff;border:solid 1px #212529;position:relative;overflow:hidden;background-color:#5ece7b}.btn[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{z-index:2;position:relative}.btn[_ngcontent-%COMP%]:after{content:\\\"\\\";width:200%;height:200%;top:0;left:50%;background-color:#212529;z-index:1;position:absolute;transform:skew(-90deg);transition:transform .5s,left .5s,top .5s}.cancel[_ngcontent-%COMP%]:after{content:\\\"\\\";width:200%;height:200%;top:0;left:50%;background-color:#dc3545;z-index:1;position:absolute;transform:skew(-90deg);transition:transform .5s,left .5s,top .5s}.btn[_ngcontent-%COMP%]:hover:after{left:-5%;top:-5%;transform:skew(0)}input[_ngcontent-%COMP%], .upload[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{border-color:#5ece7b}.form-control[_ngcontent-%COMP%]:focus, .upload[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]:hover{border-color:#5ece7b!important;box-shadow:0 0 0 .25rem #5ece7b40}.upload[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{cursor:pointer}.upload-bord[_ngcontent-%COMP%]{border-color:#dc3545!important}\"]\n  });\n  return UpdateProfileComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}