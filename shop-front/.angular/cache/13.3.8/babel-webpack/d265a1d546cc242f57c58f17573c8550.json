{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { GoogleLoginProvider } from \"angularx-social-login\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"angularx-social-login\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"./../auth.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"../dark-mode.service\";\nimport * as i6 from \"ngx-spinner\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@angular/forms\";\n\nfunction LoginComponent_div_12_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_div_12_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"Invalid email \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtemplate(1, LoginComponent_div_12_p_1_Template, 2, 0, \"p\", 17);\n    i0.ɵɵtemplate(2, LoginComponent_div_12_p_2_Template, 2, 0, \"p\", 17);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r0.loginForm.get(\"email\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r0.loginForm.get(\"email\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"email\"]);\n  }\n}\n\nfunction LoginComponent_div_19_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_div_19_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"Invalid password\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtemplate(1, LoginComponent_div_19_p_1_Template, 2, 0, \"p\", 17);\n    i0.ɵɵtemplate(2, LoginComponent_div_19_p_2_Template, 2, 0, \"p\", 17);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r1.loginForm.get(\"password\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r1.loginForm.get(\"password\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"pattern\"]);\n  }\n}\n\nconst _c0 = function (a0, a1) {\n  return [a0, a1];\n};\n\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(_SocialAuthService, toastr, _AuthService, _Router, _DarkModeService, spinner) {\n      this._SocialAuthService = _SocialAuthService;\n      this.toastr = toastr;\n      this._AuthService = _AuthService;\n      this._Router = _Router;\n      this._DarkModeService = _DarkModeService;\n      this.spinner = spinner;\n      this.darkMode = false;\n      this.loginForm = new FormGroup({\n        \"email\": new FormControl(null, [Validators.email, Validators.required]),\n        \"password\": new FormControl(null, [Validators.required, Validators.pattern(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@$&])[0-9a-zA-Z@$&]{8,}$/)])\n      });\n    }\n\n    ngOnInit() {\n      this._DarkModeService.darkMode.subscribe(res => {\n        this.darkMode = res;\n      });\n    }\n\n    login(loginForm) {\n      this.spinner.show();\n\n      if (loginForm.valid) {\n        this._AuthService.login(loginForm.value).subscribe({\n          next: response => {\n            if (response.message == 'Login successfully') {\n              this.spinner.hide();\n              localStorage.setItem(\"userToken\", response.token);\n\n              this._AuthService.saveUserData();\n\n              this._Router.navigate([\"/home\"]);\n\n              this.toastr.success(response.message, \"\", {\n                positionClass: 'toast-bottom-right',\n                timeOut: 5000\n              });\n            } else if (response.response.error == 'Unverified email') {\n              localStorage.setItem(\"userToken\", response.response.token);\n\n              this._AuthService.saveUserData();\n\n              this._Router.navigate([\"/resend\"]);\n\n              this.spinner.hide();\n              this.toastr.error(response.response.error, \"\", {\n                positionClass: 'toast-bottom-right',\n                timeOut: 5000\n              });\n            } else {\n              this.spinner.hide();\n              this.toastr.error(response.response.error, \"\", {\n                positionClass: 'toast-bottom-right',\n                timeOut: 5000\n              });\n            }\n          },\n          error: error => {\n            this.spinner.hide();\n            this.toastr.error(error.error.message, \"\", {\n              positionClass: 'toast-bottom-right',\n              timeOut: 5000\n            });\n          }\n        });\n      } else {\n        this.spinner.hide();\n        this.toastr.error('Invalid inputs', \"\", {\n          positionClass: 'toast-bottom-right',\n          timeOut: 5000\n        });\n      }\n    }\n\n    submitGoogleForm() {\n      this.spinner.show();\n\n      this._SocialAuthService.signIn(GoogleLoginProvider.PROVIDER_ID);\n\n      this._SocialAuthService.authState.subscribe(user => {\n        if (user) {\n          const data = {\n            token: user.response.access_token,\n            name: user.name,\n            profilePic: user.photoUrl\n          };\n\n          this._AuthService.googleLogin(data).subscribe({\n            next: response => {\n              if (response.message == 'Login successfully') {\n                this.spinner.hide();\n                localStorage.setItem(\"userToken\", response.token);\n\n                this._AuthService.saveUserData();\n\n                this._Router.navigate([\"/home\"]);\n\n                this.toastr.success(response.message, \"\", {\n                  positionClass: 'toast-bottom-right',\n                  timeOut: 5000\n                });\n              } else if (response.response.error == 'No user from google') {\n                this.spinner.hide();\n                this.toastr.error(response.response.error, \"\", {\n                  positionClass: 'toast-bottom-right',\n                  timeOut: 5000\n                });\n              } else {\n                this.spinner.hide();\n                this.toastr.error(response.response.error, \"\", {\n                  positionClass: 'toast-bottom-right',\n                  timeOut: 5000\n                });\n              }\n            },\n            error: error => {\n              this.spinner.hide();\n              this.toastr.error(error.error.message, \"\", {\n                positionClass: 'toast-bottom-right',\n                timeOut: 5000\n              });\n            }\n          });\n        } else {\n          this.spinner.hide();\n          this.toastr.error('No user from google', \"\", {\n            positionClass: 'toast-bottom-right',\n            timeOut: 5000\n          });\n        }\n      });\n    }\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.SocialAuthService), i0.ɵɵdirectiveInject(i2.ToastrService), i0.ɵɵdirectiveInject(i3.AuthService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i5.DarkModeService), i0.ɵɵdirectiveInject(i6.NgxSpinnerService));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 30,\n    vars: 19,\n    consts: [[\"color\", \"#5ECE7B\", \"type\", \"ball-scale-multiple\"], [1, \"py-5\", \"mt-5\", 3, \"ngClass\"], [1, \"container\"], [1, \"my-4\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-floating\", \"mb-3\"], [\"formControlName\", \"email\", \"type\", \"email\", \"id\", \"email\", \"placeholder\", \"name@example.com\", 1, \"form-control\", \"bg-transparent\", 3, \"ngClass\"], [\"for\", \"email\"], [1, \"text-danger\"], [\"class\", \"text-danger mt-2\", 4, \"ngIf\"], [\"formControlName\", \"password\", \"type\", \"password\", \"id\", \"password\", \"placeholder\", \"Password\", 1, \"form-control\", \"bg-transparent\", 3, \"ngClass\"], [\"for\", \"password\"], [\"type\", \"submit\", 1, \"btn\", \"border-0\", 3, \"ngClass\"], [1, \"btn\", \"border-0\", \"ms-1\", 3, \"ngClass\", \"click\"], [\"src\", \"assets/imgs/google.png\", \"alt\", \"google\"], [\"routerLink\", \"/forgetPassword\", 1, \"btn\", \"border-0\", \"ms-1\", 3, \"ngClass\"], [1, \"text-danger\", \"mt-2\"], [4, \"ngIf\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"ngx-spinner\", 0);\n        i0.ɵɵelementStart(1, \"section\", 1)(2, \"div\", 2)(3, \"h1\", 3);\n        i0.ɵɵtext(4, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"form\", 4);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_5_listener() {\n          return ctx.login(ctx.loginForm);\n        });\n        i0.ɵɵelementStart(6, \"div\", 5);\n        i0.ɵɵelement(7, \"input\", 6);\n        i0.ɵɵelementStart(8, \"label\", 7);\n        i0.ɵɵtext(9, \"Email \");\n        i0.ɵɵelementStart(10, \"span\", 8);\n        i0.ɵɵtext(11, \"*\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(12, LoginComponent_div_12_Template, 3, 2, \"div\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 5);\n        i0.ɵɵelement(14, \"input\", 10);\n        i0.ɵɵelementStart(15, \"label\", 11);\n        i0.ɵɵtext(16, \"Password \");\n        i0.ɵɵelementStart(17, \"span\", 8);\n        i0.ɵɵtext(18, \"*\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(19, LoginComponent_div_19_Template, 3, 2, \"div\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"button\", 12)(21, \"span\");\n        i0.ɵɵtext(22, \"Login\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(23, \"a\", 13);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_a_click_23_listener() {\n          return ctx.submitGoogleForm();\n        });\n        i0.ɵɵelementStart(24, \"span\");\n        i0.ɵɵelement(25, \"img\", 14);\n        i0.ɵɵtext(26, \" Login\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(27, \"a\", 15)(28, \"span\");\n        i0.ɵɵtext(29, \"Forget password\");\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        let tmp_3_0;\n        let tmp_4_0;\n        let tmp_6_0;\n        let tmp_7_0;\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"ngClass\", ctx.darkMode ? \"dark-mode-back dark-mode-color\" : \"\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(2);\n        i0.ɵɵclassProp(\"dark-mode-color\", ctx.darkMode);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(13, _c0, ((tmp_3_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_3_0.errors) != null && ((tmp_3_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_3_0.touched) ? \"is-invalid\" : \"\", ((tmp_3_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_3_0.errors) == null && ((tmp_3_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_3_0.touched) ? \"is-valid\" : \"\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_4_0.errors) != null && ((tmp_4_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_4_0.touched));\n        i0.ɵɵadvance(2);\n        i0.ɵɵclassProp(\"dark-mode-color\", ctx.darkMode);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(16, _c0, ((tmp_6_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_6_0.errors) != null && ((tmp_6_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_6_0.touched) ? \"is-invalid\" : \"\", ((tmp_6_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_6_0.errors) == null && ((tmp_6_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_6_0.touched) ? \"is-valid\" : \"\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_7_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_7_0.errors) != null && ((tmp_7_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_7_0.touched));\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"ngClass\", ctx.darkMode ? \"btn-dark dark-mode-color-dark\" : \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵpropertyInterpolate(\"ngClass\", ctx.darkMode ? \"btn-dark dark-mode-color-dark\" : \"\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵpropertyInterpolate(\"ngClass\", ctx.darkMode ? \"btn-dark dark-mode-color-dark\" : \"\");\n      }\n    },\n    directives: [i6.NgxSpinnerComponent, i7.NgClass, i8.ɵNgNoValidate, i8.NgControlStatusGroup, i8.FormGroupDirective, i8.DefaultValueAccessor, i8.NgControlStatus, i8.FormControlName, i7.NgIf, i4.RouterLinkWithHref],\n    styles: [\".dark-mode-back[_ngcontent-%COMP%]{background-color:#202124!important}.dark-mode-color[_ngcontent-%COMP%]{color:#fff!important}.btn-dark[_ngcontent-%COMP%]:after{background-color:#fff!important}.dark-mode-color-dark[_ngcontent-%COMP%]{color:#202124!important}.back-dark-mode[_ngcontent-%COMP%]:hover{background-color:#6e6e6e1a!important}.dark-active[_ngcontent-%COMP%]{background-color:#5ece7b!important;color:#202124!important;border-color:#fff!important}.dark-hover.page-link[_ngcontent-%COMP%]:hover{color:#202124!important}section[_ngcontent-%COMP%]{min-height:100vh}h1[_ngcontent-%COMP%]{color:#5ece7b}.btn[_ngcontent-%COMP%]{color:#fff;border:solid 1px #212529;position:relative;overflow:hidden;background-color:#5ece7b}.btn[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{z-index:2;position:relative}.btn[_ngcontent-%COMP%]:after{content:\\\"\\\";width:200%;height:200%;top:0;left:50%;background-color:#212529;z-index:1;position:absolute;transform:skew(-90deg);transition:transform .5s,left .5s,top .5s}.btn[_ngcontent-%COMP%]:hover:after{left:-5%;top:-5%;transform:skew(0)}input[_ngcontent-%COMP%]{border-color:#5ece7b}.form-control[_ngcontent-%COMP%]:focus{border-color:#5ece7b!important;box-shadow:0 0 0 .25rem #5ece7b40}img[_ngcontent-%COMP%]{width:15px}\"]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}