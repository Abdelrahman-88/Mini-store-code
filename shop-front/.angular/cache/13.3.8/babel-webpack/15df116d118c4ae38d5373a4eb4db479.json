{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-toastr\";\nimport * as i2 from \"./../auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../dark-mode.service\";\nimport * as i5 from \"ngx-spinner\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/forms\";\n\nfunction UpdatePasswordComponent_div_12_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"Old password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UpdatePasswordComponent_div_12_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"invalid old password\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UpdatePasswordComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtemplate(1, UpdatePasswordComponent_div_12_p_1_Template, 2, 0, \"p\", 17);\n    i0.ɵɵtemplate(2, UpdatePasswordComponent_div_12_p_2_Template, 2, 0, \"p\", 17);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r0.updateForm.get(\"oldPassword\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r0.updateForm.get(\"oldPassword\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"pattern\"]);\n  }\n}\n\nfunction UpdatePasswordComponent_div_19_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"New password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UpdatePasswordComponent_div_19_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"New password should contain at least 8 characters (1 number, 1 lowercase character, 1 uppercase character , 1 special character(@,$,&,_))\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UpdatePasswordComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtemplate(1, UpdatePasswordComponent_div_19_p_1_Template, 2, 0, \"p\", 17);\n    i0.ɵɵtemplate(2, UpdatePasswordComponent_div_19_p_2_Template, 2, 0, \"p\", 17);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r1.updateForm.get(\"newPassword\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r1.updateForm.get(\"newPassword\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"pattern\"]);\n  }\n}\n\nfunction UpdatePasswordComponent_div_26_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"Confirm new password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UpdatePasswordComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtemplate(1, UpdatePasswordComponent_div_26_p_1_Template, 2, 0, \"p\", 17);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r2.updateForm.get(\"cNewPassword\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n  }\n}\n\nfunction UpdatePasswordComponent_p_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 16);\n    i0.ɵɵtext(1, \"Confirm new password must match new password\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c0 = function (a0, a1) {\n  return [a0, a1];\n};\n\nexport let UpdatePasswordComponent = /*#__PURE__*/(() => {\n  class UpdatePasswordComponent {\n    constructor(toastr, _AuthService, _Router, _DarkModeService, spinner) {\n      this.toastr = toastr;\n      this._AuthService = _AuthService;\n      this._Router = _Router;\n      this._DarkModeService = _DarkModeService;\n      this.spinner = spinner;\n      this.darkMode = false;\n      this.updateForm = new FormGroup({\n        \"oldPassword\": new FormControl(null, [Validators.required, Validators.pattern(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@$&])[0-9a-zA-Z@$&]{8,}$/)]),\n        \"newPassword\": new FormControl(null, [Validators.required, Validators.pattern(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@$&])[0-9a-zA-Z@$&]{8,}$/)]),\n        \"cNewPassword\": new FormControl(null, [Validators.required])\n      });\n    }\n\n    ngOnInit() {\n      this._DarkModeService.darkMode.subscribe(res => {\n        this.darkMode = res;\n      });\n    }\n\n    updatePassword(updateForm) {\n      var _a, _b;\n\n      this.spinner.show();\n\n      if (updateForm.valid && ((_a = updateForm.get('cNewPassword')) === null || _a === void 0 ? void 0 : _a.value) == ((_b = updateForm.get('newPassword')) === null || _b === void 0 ? void 0 : _b.value)) {\n        this._AuthService.updatePassword(updateForm.value).subscribe({\n          next: response => {\n            if (response.message == 'Password updated successfully') {\n              this.spinner.hide();\n\n              this._Router.navigate([\"/profile\"]);\n\n              this.toastr.success(response.message, \"\", {\n                positionClass: 'toast-bottom-right',\n                timeOut: 5000\n              });\n            } else {\n              this.spinner.hide();\n\n              this._Router.navigate([\"/profile\"]);\n\n              this.toastr.error(response.message, \"\", {\n                positionClass: 'toast-bottom-right',\n                timeOut: 5000\n              });\n            }\n          },\n          error: error => {\n            this.spinner.hide();\n\n            this._Router.navigate([\"/profile\"]);\n\n            this.toastr.error(error.error.message, \"\", {\n              positionClass: 'toast-bottom-right',\n              timeOut: 5000\n            });\n          }\n        });\n      } else {\n        this.spinner.hide();\n        this.toastr.error('Invalid inputs', \"\", {\n          positionClass: 'toast-bottom-right',\n          timeOut: 5000\n        });\n      }\n    }\n\n  }\n\n  UpdatePasswordComponent.ɵfac = function UpdatePasswordComponent_Factory(t) {\n    return new (t || UpdatePasswordComponent)(i0.ɵɵdirectiveInject(i1.ToastrService), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.DarkModeService), i0.ɵɵdirectiveInject(i5.NgxSpinnerService));\n  };\n\n  UpdatePasswordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UpdatePasswordComponent,\n    selectors: [[\"app-update-password\"]],\n    decls: 34,\n    vars: 25,\n    consts: [[\"color\", \"#5ECE7B\", \"type\", \"ball-scale-multiple\"], [1, \"py-5\", \"mt-5\", 3, \"ngClass\"], [1, \"container\"], [1, \"my-4\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-floating\", \"mb-3\"], [\"formControlName\", \"oldPassword\", \"type\", \"password\", \"id\", \"oldPassword\", \"placeholder\", \"Old password\", 1, \"form-control\", \"bg-transparent\", 3, \"ngClass\"], [\"for\", \"oldPassword\"], [1, \"text-danger\"], [\"class\", \"text-danger mt-2\", 4, \"ngIf\"], [\"formControlName\", \"newPassword\", \"type\", \"password\", \"id\", \"newPassword\", \"placeholder\", \"New password\", 1, \"form-control\", \"bg-transparent\", 3, \"ngClass\"], [\"for\", \"newPassword\"], [\"formControlName\", \"cNewPassword\", \"type\", \"password\", \"id\", \"cNewPassword\", \"placeholder\", \"Confirm new password\", 1, \"form-control\", \"bg-transparent\", 3, \"ngClass\"], [\"for\", \"cNewPassword\"], [\"type\", \"submit\", 1, \"btn\", \"border-0\", 3, \"ngClass\"], [\"routerLink\", \"/profile\", 1, \"btn\", \"border-0\", \"ms-2\", \"cancel\"], [1, \"text-danger\", \"mt-2\"], [4, \"ngIf\"]],\n    template: function UpdatePasswordComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"ngx-spinner\", 0);\n        i0.ɵɵelementStart(1, \"section\", 1)(2, \"div\", 2)(3, \"h1\", 3);\n        i0.ɵɵtext(4, \"Update password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"form\", 4);\n        i0.ɵɵlistener(\"ngSubmit\", function UpdatePasswordComponent_Template_form_ngSubmit_5_listener() {\n          return ctx.updatePassword(ctx.updateForm);\n        });\n        i0.ɵɵelementStart(6, \"div\", 5);\n        i0.ɵɵelement(7, \"input\", 6);\n        i0.ɵɵelementStart(8, \"label\", 7);\n        i0.ɵɵtext(9, \"Old password \");\n        i0.ɵɵelementStart(10, \"span\", 8);\n        i0.ɵɵtext(11, \"*\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(12, UpdatePasswordComponent_div_12_Template, 3, 2, \"div\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 5);\n        i0.ɵɵelement(14, \"input\", 10);\n        i0.ɵɵelementStart(15, \"label\", 11);\n        i0.ɵɵtext(16, \"New password \");\n        i0.ɵɵelementStart(17, \"span\", 8);\n        i0.ɵɵtext(18, \"*\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(19, UpdatePasswordComponent_div_19_Template, 3, 2, \"div\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 5);\n        i0.ɵɵelement(21, \"input\", 12);\n        i0.ɵɵelementStart(22, \"label\", 13);\n        i0.ɵɵtext(23, \"Confirm new password \");\n        i0.ɵɵelementStart(24, \"span\", 8);\n        i0.ɵɵtext(25, \"*\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(26, UpdatePasswordComponent_div_26_Template, 2, 1, \"div\", 9);\n        i0.ɵɵtemplate(27, UpdatePasswordComponent_p_27_Template, 2, 0, \"p\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"button\", 14)(29, \"span\");\n        i0.ɵɵtext(30, \"Update\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(31, \"a\", 15)(32, \"span\");\n        i0.ɵɵtext(33, \"Cancel\");\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        let tmp_3_0;\n        let tmp_4_0;\n        let tmp_6_0;\n        let tmp_7_0;\n        let tmp_9_0;\n        let tmp_10_0;\n        let tmp_11_0;\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"ngClass\", ctx.darkMode ? \"dark-mode-back dark-mode-color\" : \"\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.updateForm);\n        i0.ɵɵadvance(2);\n        i0.ɵɵclassProp(\"dark-mode-color\", ctx.darkMode);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(16, _c0, ((tmp_3_0 = ctx.updateForm.get(\"oldPassword\")) == null ? null : tmp_3_0.errors) != null && ((tmp_3_0 = ctx.updateForm.get(\"oldPassword\")) == null ? null : tmp_3_0.touched) ? \"is-invalid\" : \"\", ((tmp_3_0 = ctx.updateForm.get(\"oldPassword\")) == null ? null : tmp_3_0.errors) == null && ((tmp_3_0 = ctx.updateForm.get(\"oldPassword\")) == null ? null : tmp_3_0.touched) ? \"is-valid\" : \"\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.updateForm.get(\"oldPassword\")) == null ? null : tmp_4_0.errors) != null && ((tmp_4_0 = ctx.updateForm.get(\"oldPassword\")) == null ? null : tmp_4_0.touched));\n        i0.ɵɵadvance(2);\n        i0.ɵɵclassProp(\"dark-mode-color\", ctx.darkMode);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(19, _c0, ((tmp_6_0 = ctx.updateForm.get(\"newPassword\")) == null ? null : tmp_6_0.errors) != null && ((tmp_6_0 = ctx.updateForm.get(\"newPassword\")) == null ? null : tmp_6_0.touched) ? \"is-invalid\" : \"\", ((tmp_6_0 = ctx.updateForm.get(\"newPassword\")) == null ? null : tmp_6_0.errors) == null && ((tmp_6_0 = ctx.updateForm.get(\"newPassword\")) == null ? null : tmp_6_0.touched) ? \"is-valid\" : \"\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_7_0 = ctx.updateForm.get(\"newPassword\")) == null ? null : tmp_7_0.errors) != null && ((tmp_7_0 = ctx.updateForm.get(\"newPassword\")) == null ? null : tmp_7_0.touched));\n        i0.ɵɵadvance(2);\n        i0.ɵɵclassProp(\"dark-mode-color\", ctx.darkMode);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(22, _c0, (((tmp_9_0 = ctx.updateForm.get(\"cNewPassword\")) == null ? null : tmp_9_0.errors) != null || ((tmp_9_0 = ctx.updateForm.get(\"cNewPassword\")) == null ? null : tmp_9_0.value) !== ((tmp_9_0 = ctx.updateForm.get(\"newPassword\")) == null ? null : tmp_9_0.value)) && ((tmp_9_0 = ctx.updateForm.get(\"cNewPassword\")) == null ? null : tmp_9_0.touched) ? \"is-invalid\" : \"\", ((tmp_9_0 = ctx.updateForm.get(\"cNewPassword\")) == null ? null : tmp_9_0.errors) == null && ((tmp_9_0 = ctx.updateForm.get(\"cNewPassword\")) == null ? null : tmp_9_0.touched) && ((tmp_9_0 = ctx.updateForm.get(\"cNewPassword\")) == null ? null : tmp_9_0.value) === ((tmp_9_0 = ctx.updateForm.get(\"newPassword\")) == null ? null : tmp_9_0.value) ? \"is-valid\" : \"\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_10_0 = ctx.updateForm.get(\"cNewPassword\")) == null ? null : tmp_10_0.errors) != null && ((tmp_10_0 = ctx.updateForm.get(\"cNewPassword\")) == null ? null : tmp_10_0.touched));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_11_0 = ctx.updateForm.get(\"cNewPassword\")) == null ? null : tmp_11_0.value) != ((tmp_11_0 = ctx.updateForm.get(\"newPassword\")) == null ? null : tmp_11_0.value) && ((tmp_11_0 = ctx.updateForm.get(\"cNewPassword\")) == null ? null : tmp_11_0.touched));\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"ngClass\", ctx.darkMode ? \"btn-dark dark-mode-color-dark\" : \"\");\n      }\n    },\n    directives: [i5.NgxSpinnerComponent, i6.NgClass, i7.ɵNgNoValidate, i7.NgControlStatusGroup, i7.FormGroupDirective, i7.DefaultValueAccessor, i7.NgControlStatus, i7.FormControlName, i6.NgIf, i3.RouterLinkWithHref],\n    styles: [\".dark-mode-back[_ngcontent-%COMP%]{background-color:#202124!important}.dark-mode-color[_ngcontent-%COMP%]{color:#fff!important}.btn-dark[_ngcontent-%COMP%]:after{background-color:#fff!important}.dark-mode-color-dark[_ngcontent-%COMP%]{color:#202124!important}.back-dark-mode[_ngcontent-%COMP%]:hover{background-color:#6e6e6e1a!important}.dark-active[_ngcontent-%COMP%]{background-color:#5ece7b!important;color:#202124!important;border-color:#fff!important}.dark-hover.page-link[_ngcontent-%COMP%]:hover{color:#202124!important}section[_ngcontent-%COMP%]{min-height:100vh}h1[_ngcontent-%COMP%]{color:#5ece7b}.btn[_ngcontent-%COMP%]{color:#fff;border:solid 1px #212529;position:relative;overflow:hidden;background-color:#5ece7b}.btn[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{z-index:2;position:relative}.btn[_ngcontent-%COMP%]:after{content:\\\"\\\";width:200%;height:200%;top:0;left:50%;background-color:#212529;z-index:1;position:absolute;transform:skew(-90deg);transition:transform .5s,left .5s,top .5s}.cancel[_ngcontent-%COMP%]:after{content:\\\"\\\";width:200%;height:200%;top:0;left:50%;background-color:#dc3545;z-index:1;position:absolute;transform:skew(-90deg);transition:transform .5s,left .5s,top .5s}.btn[_ngcontent-%COMP%]:hover:after{left:-5%;top:-5%;transform:skew(0)}input[_ngcontent-%COMP%]{border-color:#5ece7b}.form-control[_ngcontent-%COMP%]:focus{border-color:#5ece7b!important;box-shadow:0 0 0 .25rem #5ece7b40}\"]\n  });\n  return UpdatePasswordComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}